// convert the code below to use the array methods instead of for loops
// you'll need to use the filter, reduce, map, and forEach methods
const princesses = [{ name: "Rapunzel", age: 18 }, { name: "Mulan", age: 16 },
  { name: "Anna", age: 18 }, { name: "Moana", age: 16 }];
// log the name of each princess, follow by a colon, followed by their age
// can be replaced with forEach. The function(element) is declared by you and is called in the console.log. It's a new Array?
princesses.forEach(function(princess)
 {
  console.log('princess', `${princess.name}: ${princess.age}`);
});
// create an array of princess names from the existing array
// can be replaced with map
const names = princesses.map(function(princess) {
    return princess.name;
});
console.log("names: ", names);
// using the `names` array, get only those names that start with an 'M'
// can be replaced with filter
const mNames = names.filter(function(name) {
    return name.startsWith("M")
})
// for (let i = 0; i < names.length; i++) {
//   if (names[i].startsWith("M")) {
//     mNames.push(names[i]);
//   }
console.log("m-names: ", mNames);
// get a single value from the data: the average age of all of the princesses
// Can be replaced with reduce
const sum = princesses.reduce(function(sum, princess) {
  return sum + princess.age;
}, 0);

const average = sum / princesses.length;
console.log("average age: ", average);

// BONUS: get the average age of all princesses whose name includes an 'l'
const lNames = names.filter(function(name) {
  return name.includes("l");
})
console.log("l-names: ", lNames);

const lSum = lNames.reduce(function(sum, princess) {
  return sum + princess.age;
}, 0);

const lAverage = lSum / lNames.length;
  console.log("L average age:", lAverage)
